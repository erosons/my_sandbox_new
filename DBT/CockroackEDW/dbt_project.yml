
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
# Project Metadata
# version :field allows you to track the version of your dbt project. 
#            It follows semantic versioning principles, which helps in identifying changes and ensuring compatibility
name: 'CockroackEDW'
version: '1.0.0'   
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'CockroackEDW'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!

model-paths: ["models"]       # SQL files
analysis-paths: ["analyses"]  # test fles for your model
test-paths: ["tests"]
seed-paths: ["seeds"]         # File enrichment,  Directories for CSV files that dbt can load into your data warehouse.
macro-paths: ["macros"]        # Directories for custom Jinja macros, reusable pieces of logic
snapshot-paths: ["snapshots"]  # Directories for snapshot files, which capture the state of your data at specific points in time

clean-targets:     # directories to be removed by `dbt clean` This is typically used to clean up artifacts generated by dbt, such as compiled SQL files or installed packages.
  - "target"
  - "dbt_packages" 


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  CockroackEDW:
    # Config indicated by + and applies to all files under models/example/
    example:
      +materialized: view

#Materialization Options
# models:
#   CockroackEDW:
#     # Config indicated by + and applies to all files under models/example/
#     example:
#       +materialized: table

# models:
#   CockroackEDW:
#     # Config indicated by + and applies to all files under models/example/
#     example:
#       +materialized: incremental
        # Optional configurations for incremental models
        # +incremental_strategy: insert_overwrite

# models:
#   CockroackEDW:
#     # Config indicated by + and applies to all files under models/example/
#     example:
#       +materialized: incremental
        # Optional configurations for incremental models
        # +incremental_strategy: merge
        
# Use ephemeral tables when you need temporary staging or intermediate calculations that do not need to be stored in the database.
# temp table or CTE
# Ephemeral tables are temporary and exist only during the dbt ru
# models:
#   CockroackEDW:
#     example:
#       +materialized: ephemeral
