DROP TABLE IF EXISTS #TEMP_CAL

DECLARE @StartDate DATE = '1/1/2021'
DECLARE @EndDate DATE = GETDATE() --'12/31/2022'
CREATE TABLE #TEMP_CAL(datetime_ DATETIME)

;WITH CTE_SEQUENCE(n) AS 
    (
      SELECT 1
      UNION ALL
      SELECT n + 1
      FROM CTE_SEQUENCE
      WHERE n < DATEDIFF(HOUR, CAST(@StartDate AS DATETIME), DATEADD(DAY, 1, CAST(@EndDate AS DATETIME)))
    ),
CTE_SEQUENCE2(y) AS 
    (
    SELECT YEAR(@StartDate)
    UNION ALL
    SELECT y + 1
    FROM CTE_SEQUENCE2
    WHERE y < YEAR(@EndDate)
    ),
CTE_DST([Year], [March DST], [November DST]) AS
    (
    SELECT 
        y AS [Year], 
        DATEADD(DAY, -(DATEPART(WEEKDAY, DATEFROMPARTS(y, 3, 14))-1), DATEFROMPARTS(y, 3, 14)) AS [March DST],
        DATEADD(DAY, -(DATEPART(WEEKDAY, DATEFROMPARTS(y, 11, 7))-1), DATEFROMPARTS(y, 11, 7)) AS [November DST]
    FROM CTE_SEQUENCE2 
    ),
CTE_CALENDAR1(datetime_) AS
    (
    SELECT CAST(@StartDate AS DATETIME)
    UNION
    SELECT DATEADD(HOUR, n, CAST(@StartDate AS DATETIME))
    FROM CTE_SEQUENCE   
    ),
CTE_CALENDAR2(datetime_) AS
    (
    SELECT cte1.datetime_ FROM CTE_CALENDAR1 cte1 WHERE cte1.datetime_ NOT IN (SELECT DATEADD(HOUR, 3, CAST(dst.[March DST] AS DATETIME)) FROM CTE_DST dst)
    UNION ALL
    SELECT DATEADD(MINUTE, 150, CAST(dst.[November DST] AS DATETIME)) FROM CTE_DST dst WHERE dst.[November DST] BETWEEN @StartDate AND @EndDate
    ),
CTE_CALENDAR3(OPERATING_DATE, OPERATING_HOUR) AS
    (
    SELECT 
        CAST(datetime_ AS DATE) AS [OPERATING_DATE],
        CASE WHEN datetime_ IN (SELECT [March DST] FROM CTE_DST) THEN 1
            WHEN DATEADD(HOUR, -1, datetime_) IN (SELECT [March DST] FROM CTE_DST) THEN 2
            WHEN CAST(DATEFROMPARTS(YEAR(datetime_), MONTH(datetime_), DAY(datetime_)) AS DATETIME) IN (SELECT [March DST] FROM CTE_DST) AND DATEPART(HOUR, datetime_) >= 3 THEN DATEPART(HOUR, datetime_)
            WHEN CAST(DATEFROMPARTS(YEAR(datetime_), MONTH(datetime_), DAY(datetime_)) AS DATETIME) IN (SELECT [November DST] FROM CTE_DST) AND DATEPART(HOUR, datetime_) >= 3 THEN DATEPART(HOUR, datetime_) + 2
            WHEN datetime_ IN (SELECT DATEADD(MINUTE, 150, CAST(dst.[November DST] AS DATETIME)) FROM CTE_DST dst) THEN 4
            ELSE DATEPART(HOUR, datetime_) + 1
        END AS [OPERATING_HOUR]
    FROM CTE_CALENDAR2
    )
SELECT
    OPERATING_DATE,
    OPERATING_HOUR,
    (OPERATING_HOUR * 4) - 3 AS [INTERVAL]
FROM CTE_CALENDAR3
UNION 
SELECT
    OPERATING_DATE,
    OPERATING_HOUR,
    (OPERATING_HOUR * 4) - 2 AS [INTERVAL]
FROM CTE_CALENDAR3
UNION 
SELECT
    OPERATING_DATE,
    OPERATING_HOUR,
    (OPERATING_HOUR * 4) - 1 AS [INTERVAL]
FROM CTE_CALENDAR3
UNION 
SELECT
    OPERATING_DATE,
    OPERATING_HOUR,
    (OPERATING_HOUR * 4) AS [INTERVAL]
FROM CTE_CALENDAR3
ORDER BY 
    OPERATING_DATE, 
    OPERATING_HOUR, 
    [INTERVAL]
OPTION(MAXRECURSION 0) 
