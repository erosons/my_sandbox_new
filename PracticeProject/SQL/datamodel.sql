-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS "CareerPath"."Electives"
(
    id integer NOT NULL DEFAULT nextval('"CareerPath"."Electives_id_seq"'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Desc" character varying(300) COLLATE pg_catalog."default" NOT NULL,
    "Unit" integer NOT NULL,
    program_id integer,
    CONSTRAINT "Electives_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "CareerPath"."Program"
(
    id integer NOT NULL DEFAULT nextval('"CareerPath"."Program_id_seq"'::regclass),
    name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    program_categories character varying(150) COLLATE pg_catalog."default" NOT NULL,
    "Desc" character varying(300) COLLATE pg_catalog."default" NOT NULL,
    student_id integer,
    CONSTRAINT "Program_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "CareerPath"."User"
(
    id integer NOT NULL DEFAULT nextval('"CareerPath"."User_id_seq"'::regclass),
    username character varying(80) COLLATE pg_catalog."default" NOT NULL,
    password character varying(100) COLLATE pg_catalog."default" NOT NULL,
    role character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "User_pkey" PRIMARY KEY (id),
    CONSTRAINT "User_username_key" UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS "CareerPath"."career_Path"
(
    id integer NOT NULL DEFAULT nextval('"CareerPath"."career_Path_id_seq"'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "desc" character varying(300) COLLATE pg_catalog."default" NOT NULL,
    program_id integer,
    CONSTRAINT "career_Path_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "CareerPath".complains
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    compliant character varying(1000) COLLATE pg_catalog."default",
    user_id integer,
    "Student_ID" integer,
    CONSTRAINT "Complian_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "CareerPath".course_status
(
    id character varying(100) COLLATE pg_catalog."default" NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT course_status_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "CareerPath".courses
(
    id integer NOT NULL DEFAULT nextval('"CareerPath".courses_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "desc" character varying(300) COLLATE pg_catalog."default" NOT NULL,
    "Unit" integer NOT NULL,
    semesta_id integer,
    course_status_id character varying(300) COLLATE pg_catalog."default",
    program_id integer,
    career_path_id integer,
    CONSTRAINT courses_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "CareerPath".prerequisite
(
    id character varying(100) COLLATE pg_catalog."default" NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "desc" character varying(300) COLLATE pg_catalog."default" NOT NULL,
    unit integer NOT NULL,
    course_id integer,
    status_id character varying(300) COLLATE pg_catalog."default",
    semester_id integer NOT NULL,
    CONSTRAINT prerequisite_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "CareerPath".prerequisite_waiver
(
    id character varying(100) COLLATE pg_catalog."default" NOT NULL,
    name_of_requester character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Prequisiste_status" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "desc" character varying(300) COLLATE pg_catalog."default" NOT NULL,
    unit integer NOT NULL,
    "Prerequisite_id" character varying(300) COLLATE pg_catalog."default",
    waiver_request character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT prerequisite_waiver_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "CareerPath".semesters
(
    id integer NOT NULL DEFAULT nextval('"CareerPath".semesters_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT semesters_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "CareerPath".student
(
    id integer NOT NULL DEFAULT nextval('"CareerPath".student_id_seq'::regclass),
    name character varying(80) COLLATE pg_catalog."default" NOT NULL,
    email character varying(150) COLLATE pg_catalog."default" NOT NULL,
    "program_ID" character varying(150) COLLATE pg_catalog."default",
    user_id integer,
    careerpath_name character varying(80) COLLATE pg_catalog."default",
    studentadvisor_id integer,
    CONSTRAINT student_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "CareerPath".student_advisor
(
    id integer NOT NULL DEFAULT nextval('"CareerPath".student_advisor_id_seq'::regclass),
    name character varying(80) COLLATE pg_catalog."default" NOT NULL,
    user_id integer,
    CONSTRAINT student_advisor_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "CareerPath".student_profile
(
    id integer NOT NULL,
    coursename character varying COLLATE pg_catalog."default",
    course_grade character varying COLLATE pg_catalog."default",
    "courseUnit" integer,
    course_status character varying COLLATE pg_catalog."default",
    student_id integer,
    semester_id integer,
    CONSTRAINT student_profile_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.alembic_version
(
    version_num character varying(32) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT alembic_version_pkc PRIMARY KEY (version_num)
);

ALTER TABLE IF EXISTS "CareerPath"."Electives"
    ADD CONSTRAINT "Electives_program_id_fkey" FOREIGN KEY (program_id)
    REFERENCES "CareerPath"."Program" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "CareerPath"."Program"
    ADD CONSTRAINT "Program_student_id_fkey" FOREIGN KEY (student_id)
    REFERENCES "CareerPath".student (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "CareerPath"."career_Path"
    ADD CONSTRAINT "career_Path_program_id_fkey" FOREIGN KEY (program_id)
    REFERENCES "CareerPath"."Program" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "CareerPath".complains
    ADD CONSTRAINT "Complian_user_id_fkey" FOREIGN KEY (user_id)
    REFERENCES "CareerPath"."User" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "CareerPath".complains
    ADD CONSTRAINT "complians_Student_ID_fkey" FOREIGN KEY ("Student_ID")
    REFERENCES "CareerPath".student (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "CareerPath".courses
    ADD CONSTRAINT courses_career_path_id_fkey FOREIGN KEY (career_path_id)
    REFERENCES "CareerPath"."career_Path" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "CareerPath".courses
    ADD CONSTRAINT courses_course_status_id_fkey FOREIGN KEY (course_status_id)
    REFERENCES "CareerPath".course_status (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "CareerPath".courses
    ADD CONSTRAINT courses_program_id_fkey FOREIGN KEY (program_id)
    REFERENCES "CareerPath"."Program" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "CareerPath".courses
    ADD CONSTRAINT courses_semesta_id_fkey FOREIGN KEY (semesta_id)
    REFERENCES "CareerPath".semesters (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "CareerPath".prerequisite
    ADD CONSTRAINT prerequisite_course_id_fkey FOREIGN KEY (course_id)
    REFERENCES "CareerPath".courses (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "CareerPath".prerequisite
    ADD CONSTRAINT prerequisite_semester_id_fkey FOREIGN KEY (semester_id)
    REFERENCES "CareerPath".semesters (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "CareerPath".prerequisite
    ADD CONSTRAINT prerequisite_status_id_fkey FOREIGN KEY (status_id)
    REFERENCES "CareerPath".course_status (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "CareerPath".student
    ADD CONSTRAINT student_studentadvisor_id_fkey FOREIGN KEY (studentadvisor_id)
    REFERENCES "CareerPath".student_advisor (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "CareerPath".student
    ADD CONSTRAINT student_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES "CareerPath"."User" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "CareerPath".student_advisor
    ADD CONSTRAINT student_advisor_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES "CareerPath"."User" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "CareerPath".student_profile
    ADD CONSTRAINT student_profile_semester_id_fkey FOREIGN KEY (semester_id)
    REFERENCES "CareerPath".semesters (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "CareerPath".student_profile
    ADD CONSTRAINT student_profile_student_id_fkey FOREIGN KEY (student_id)
    REFERENCES "CareerPath".student (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;